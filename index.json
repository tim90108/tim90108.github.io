[{"categories":["前端設計"],"contents":"🎨 Canvas 是什麼？ \u0026lt;canvas\u0026gt; 是 HTML5 提供的一個元素，讓你可以在網頁上動態繪製圖形、圖片處理、動畫，甚至是遊戲開發。你可以使用 JavaScript 操控它的繪圖上下文（context），來畫出各種 2D 或 3D 圖形。\n✏️ 如何使用 Canvas？ 1. HTML 結構 \u0026lt;canvas id=\u0026#34;myCanvas\u0026#34; width=\u0026#34;400\u0026#34; height=\u0026#34;300\u0026#34; style=\u0026#34;border:1px solid #ccc;\u0026#34;\u0026gt;\u0026lt;/canvas\u0026gt; id：指定一個識別名稱，供 JavaScript 使用。 width / height：設定繪圖區域大小。 style：加個邊框比較看得清楚。 2. JavaScript 畫圖 const canvas = document.getElementById(\u0026#39;myCanvas\u0026#39;); const ctx = canvas.getContext(\u0026#39;2d\u0026#39;); // 取得 2D 繪圖上下文 // 畫一個紅色矩形 ctx.fillStyle = \u0026#39;red\u0026#39;; ctx.fillRect(50, 50, 150, 100); // (x, y, width, height) 3. 更多繪圖功能 畫圓形 ctx.beginPath(); ctx.arc(200, 150, 40, 0, Math.PI * 2); // x, y, radius, startAngle, endAngle ctx.fillStyle = \u0026#39;blue\u0026#39;; ctx.fill(); 畫線條 ctx.beginPath(); ctx.moveTo(20, 20); ctx.lineTo(200, 100); ctx.strokeStyle = \u0026#39;green\u0026#39;; ctx.lineWidth = 3; ctx.stroke(); 🚀 小動畫範例：移動的圓形 \u0026lt;canvas id=\u0026#34;canvasMove\u0026#34; width=\u0026#34;400\u0026#34; height=\u0026#34;200\u0026#34; style=\u0026#34;border:1px solid #ccc;\u0026#34;\u0026gt;\u0026lt;/canvas\u0026gt; \u0026lt;script\u0026gt; const canvas = document.getElementById(\u0026#39;canvasMove\u0026#39;); const ctx = canvas.getContext(\u0026#39;2d\u0026#39;); let x = 20; function draw() { ctx.clearRect(0, 0, canvas.width, canvas.height); // 清除畫面 ctx.beginPath(); ctx.arc(x, 100, 20, 0, Math.PI * 2); ctx.fillStyle = \u0026#39;purple\u0026#39;; ctx.fill(); x += 2; if (x \u0026gt; canvas.width) x = 0; requestAnimationFrame(draw); // 每幀呼叫 } draw(); \u0026lt;/script\u0026gt; 📚 小結 Canvas 是一個功能強大的工具，能讓你：\n動態產生圖形 實現動畫效果 建立遊戲或視覺化資料展示 只需結合 JavaScript，就能創造無限可能！\n🔗 延伸閱讀 MDN Canvas API 說明 HTML5 Canvas Tutorial ","permalink":"http://localhost:1313/blog/post-1/","tags":["HTML5","JavaScript","Canvas","前端"],"title":"Canvas 基礎教學"},{"categories":["前端設計"],"contents":"🎯 簡介 五子棋是一種傳統的策略棋類遊戲，兩位玩家輪流在棋盤上放置黑白棋子，先連成五子者獲勝。本文將介紹如何使用 HTML5 的 \u0026lt;canvas\u0026gt; 元素和 JavaScript 來實作一個基本的五子棋遊戲，並解析其中的重要程式碼片段。\n🛠️ 開發步驟 1. 設置 HTML 結構 \u0026lt;canvas id=\u0026#34;gomokuCanvas\u0026#34; width=\u0026#34;600\u0026#34; height=\u0026#34;600\u0026#34; style=\u0026#34;border:1px solid #000;\u0026#34;\u0026gt;\u0026lt;/canvas\u0026gt; 2. 初始化 Canvas 和繪製棋盤 const canvas = document.getElementById(\u0026#39;gomokuCanvas\u0026#39;); const ctx = canvas.getContext(\u0026#39;2d\u0026#39;); const gridSize = 40; const boardSize = 15; function drawBoard() { ctx.strokeStyle = \u0026#39;#000\u0026#39;; for (let i = 0; i \u0026lt; boardSize; i++) { ctx.beginPath(); ctx.moveTo(gridSize * (i + 1), gridSize); ctx.lineTo(gridSize * (i + 1), gridSize * boardSize); ctx.stroke(); ctx.beginPath(); ctx.moveTo(gridSize, gridSize * (i + 1)); ctx.lineTo(gridSize * boardSize, gridSize * (i + 1)); ctx.stroke(); } } drawBoard(); 3. 更多繪圖功能 畫圓形 ctx.beginPath(); ctx.arc(200, 150, 40, 0, Math.PI * 2); // x, y, radius, startAngle, endAngle ctx.fillStyle = \u0026#39;blue\u0026#39;; ctx.fill(); 畫線條 ctx.beginPath(); ctx.moveTo(20, 20); ctx.lineTo(200, 100); ctx.strokeStyle = \u0026#39;green\u0026#39;; ctx.lineWidth = 3; ctx.stroke(); 🚀 小動畫範例：移動的圓形 \u0026lt;canvas id=\u0026#34;canvasMove\u0026#34; width=\u0026#34;400\u0026#34; height=\u0026#34;200\u0026#34; style=\u0026#34;border:1px solid #ccc;\u0026#34;\u0026gt;\u0026lt;/canvas\u0026gt; \u0026lt;script\u0026gt; const canvas = document.getElementById(\u0026#39;canvasMove\u0026#39;); const ctx = canvas.getContext(\u0026#39;2d\u0026#39;); let x = 20; function draw() { ctx.clearRect(0, 0, canvas.width, canvas.height); // 清除畫面 ctx.beginPath(); ctx.arc(x, 100, 20, 0, Math.PI * 2); ctx.fillStyle = \u0026#39;purple\u0026#39;; ctx.fill(); x += 2; if (x \u0026gt; canvas.width) x = 0; requestAnimationFrame(draw); // 每幀呼叫 } draw(); \u0026lt;/script\u0026gt; 📚 小結 Canvas 是一個功能強大的工具，能讓你：\n動態產生圖形 實現動畫效果 建立遊戲或視覺化資料展示 只需結合 JavaScript，就能創造無限可能！\n🔗 延伸閱讀 MDN Canvas API 說明 HTML5 Canvas Tutorial ","permalink":"http://localhost:1313/blog/post-1-copy/","tags":["HTML5","JavaScript","Canvas","前端"],"title":"使用 HTML5 Canvas 製作五子棋遊戲"},{"categories":["前端設計"],"contents":"🎨 五子棋 五子棋是一種傳統的策略棋類遊戲，兩位玩家輪流在棋盤上放置黑白棋子，先連成五子者獲勝。本文將介紹如何使用 HTML5 的 \u0026lt;canvas\u0026gt; 元素和 JavaScript 來實作一個基本的五子棋遊戲，並解析其中的重要程式碼片段。\n🛠️ 開發步驟 1. 設置 HTML 結構 \u0026lt;canvas id=\u0026#34;gomokuCanvas\u0026#34; width=\u0026#34;600\u0026#34; height=\u0026#34;600\u0026#34; style=\u0026#34;border:1px solid #000;\u0026#34;\u0026gt;\u0026lt;/canvas\u0026gt; 2. 初始化 Canvas 和繪製棋盤 const canvas = document.getElementById(\u0026#39;gomokuCanvas\u0026#39;); const ctx = canvas.getContext(\u0026#39;2d\u0026#39;); const gridSize = 40; const boardSize = 15; function drawBoard() { ctx.strokeStyle = \u0026#39;#000\u0026#39;; for (let i = 0; i \u0026lt; boardSize; i++) { ctx.beginPath(); ctx.moveTo(gridSize * (i + 1), gridSize); ctx.lineTo(gridSize * (i + 1), gridSize * boardSize); ctx.stroke(); ctx.beginPath(); ctx.moveTo(gridSize, gridSize * (i + 1)); ctx.lineTo(gridSize * boardSize, gridSize * (i + 1)); ctx.stroke(); } } drawBoard(); 3. 處理玩家點擊並放置棋子 let board = Array(boardSize).fill(null).map(() =\u0026gt; Array(boardSize).fill(null)); let currentPlayer = \u0026#39;black\u0026#39;; canvas.addEventListener(\u0026#39;click\u0026#39;, (event) =\u0026gt; { const rect = canvas.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; const i = Math.round((x - gridSize) / gridSize); const j = Math.round((y - gridSize) / gridSize); if (board[i][j] === null) { board[i][j] = currentPlayer; drawPiece(i, j, currentPlayer); currentPlayer = currentPlayer === \u0026#39;black\u0026#39; ? \u0026#39;white\u0026#39; : \u0026#39;black\u0026#39;; } }); function drawPiece(i, j, color) { const x = gridSize * (i + 1); const y = gridSize * (j + 1); ctx.beginPath(); ctx.arc(x, y, gridSize / 2.5, 0, Math.PI * 2); ctx.fillStyle = color; ctx.fill(); } 4. 判斷勝負 function checkWin(i, j, color) { return checkDirection(i, j, color, 1, 0) || checkDirection(i, j, color, 0, 1) || checkDirection(i, j, color, 1, 1) || checkDirection(i, j, color, 1, -1); } function checkDirection(i, j, color, di, dj) { let count = 1; for (let step = 1; step \u0026lt; 5; step++) { const ni = i + di * step; const nj = j + dj * step; if (ni \u0026gt;= 0 \u0026amp;\u0026amp; ni \u0026lt; boardSize \u0026amp;\u0026amp; nj \u0026gt;= 0 \u0026amp;\u0026amp; nj \u0026lt; boardSize \u0026amp;\u0026amp; board[ni][nj] === color) { count++; } else { break; } } for (let step = 1; step \u0026lt; 5; step++) { const ni = i - di * step; const nj = j - dj * step; if (ni \u0026gt;= 0 \u0026amp;\u0026amp; ni \u0026lt; boardSize \u0026amp;\u0026amp; nj \u0026gt;= 0 \u0026amp;\u0026amp; nj \u0026lt; boardSize \u0026amp;\u0026amp; board[ni][nj] === color) { count++; } else { break; } } return count \u0026gt;= 5; } 🌀 示範動畫 互動式五子棋 Canvas 示範 ✅ 小結 本文介紹了如何用 HTML5 Canvas 元素搭配 JavaScript 建立互動式五子棋遊戲，並說明了棋盤繪製、棋子放置、點擊事件處理與勝負判斷等核心功能的程式碼邏輯。\n你也可以延伸本範例，加上重新開始、悔棋、AI 對戰等進階功能，打造更完整的遊戲體驗。\n","permalink":"http://localhost:1313/blog/post-2/","tags":["HTML5","JavaScript","Canvas","前端"],"title":"使用 HTML5 Canvas 製作五子棋遊戲"},{"categories":["Go Language"],"contents":"Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Emphasis Emphasis, aka italics, with asterisks or underscores.\nStrong emphasis, aka bold, with asterisks or underscores.\nCombined emphasis with asterisks and underscores.\nStrikethrough uses two tildes. Scratch this.\nLink I\u0026rsquo;m an inline-style link\nI\u0026rsquo;m an inline-style link with title\nI\u0026rsquo;m a reference-style link\nI\u0026rsquo;m a relative reference to a repository file\nYou can use numbers for reference-style link definitions\nOr leave it empty and use the link text itself.\nURLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example).\nSome text to show that the reference links can follow later.\nParagraph Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam nihil enim maxime corporis cumque totam aliquid nam sint inventore optio modi neque laborum officiis necessitatibus, facilis placeat pariatur! Voluptatem, sed harum pariatur adipisci voluptates voluptatum cumque, porro sint minima similique magni perferendis fuga! Optio vel ipsum excepturi tempore reiciendis id quidem? Vel in, doloribus debitis nesciunt fugit sequi magnam accusantium modi neque quis, vitae velit, pariatur harum autem a! Velit impedit atque maiores animi possimus asperiores natus repellendus excepturi sint architecto eligendi non, omnis nihil. Facilis, doloremque illum. Fugit optio laborum minus debitis natus illo perspiciatis corporis voluptatum rerum laboriosam.\nList List item List item List item List item List item Unordered List List item List item List item List item List item Code and Syntax Highlighting Inline code has back-ticks around it.\nvar s = \u0026#34;JavaScript syntax highlighting\u0026#34;; alert(s); s = \u0026#34;Python syntax highlighting\u0026#34; print s No language indicated, so no syntax highlighting. But let\u0026#39;s throw in a \u0026lt;b\u0026gt;tag\u0026lt;/b\u0026gt;. Blockquote This is a blockquote example.\nInline HTML You can also use raw HTML in your Markdown, and it\u0026rsquo;ll mostly work pretty well.\nTables Colons can be used to align columns.\nTables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don\u0026rsquo;t need to make the raw Markdown line up prettily. You can also use inline Markdown.\nMarkdown Less Pretty Still renders nicely 1 2 3 Image Youtube video ","permalink":"http://localhost:1313/blog/post-13/","tags":["Photos","Game","HTML","Python","New"],"title":"How To Use Checklists To Improve Your UX"}]